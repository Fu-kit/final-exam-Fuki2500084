Section1

Section 1.1 - Get product price from predefined bakery items

print(get_product_price("Croissant"))  # Expected output: 3.5
print(get_product_price("Muffin"))     # Expected output: 2.75
print(get_product_price("Scone"))      # Expected output: 4.0
print(get_product_price("Bagel"))      # Expected output: Product not found

# Result
3.5
2.75
4.0
Product not found

Section 1.2 - Add an item to the order list with validation

# Simple test 1 of my function:
order = []
add_order_item(order, "Croissant", 2)
add_order_item(order, "Scone", 1)
print(order)
# Expected output:  [{'product': 'Croissant', 'qty': 2, 'price': 3.5}, {'product': 'Scone', 'qty': 1, 'price': 4.0}]

# Result
[{'product': 'Croissant', 'qty': 2, 'price': 3.5}, {'product': 'Scone', 'qty': 1, 'price': 4.0}]

# Simple test 2 of my function:
order = []
add_order_item(order, "Bagel", 3)          # Invalid product
add_order_item(order, "Muffin", -1)        # Invalid quantity
print(order)
# Expected output: 
#Error: Product not found.
#Error: Quantity must be a positive integer.
# []

# Result
Error: Product not found.
Error: Quantity must be a positive integer.
[]


Section 1.3 - Calculate and display the total cost of an order

# Simple test of your function:
order = []
add_order_item(order, "Croissant", 2)
add_order_item(order, "Muffin", 3)
add_order_item(order, "Scone", 1)
calculate_order_total(order)

# Expected output:
# Croissant: 2 x $3.50 = $7.00
# Muffin: 3 x $2.75 = $8.25
# Scone: 1 x $4.00 = $4.00
# Grand Total: $19.25

# Result
Croissant: 2 x $3.50 = $7.00
Muffin: 3 x $2.75 = $8.25
Scone: 1 x $4.00 = $4.00
Grand Total: $19.25

----------------------------------------------------------------------------------






